name: Build React App

on:
  push:
    branches:
      - main
    paths:
      - 'front/**'
  pull_request:
    branches:
      - main
    paths:
      - 'front/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install OpenShift CLI
        run: |
          set -e
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xvf oc.tar.gz
          sudo mv oc /usr/local/bin/

      - name: Login to OpenShift
        run: |
          set -e
          oc login --token=${{ secrets.OPENSHIFT_TOKEN }} --server=${{ secrets.OPENSHIFT_SERVER }}
          oc project ${{ secrets.OPENSHIFT_PROJECT }}

      - name: Create Production Environment File
        run: |
          cd front
          echo "VITE_KEYCLOAK_URL=${{ secrets.VITE_KEYCLOAK_URL }}" > .env.production
          echo "VITE_KEYCLOAK_REALM=${{ secrets.VITE_KEYCLOAK_REALM }}" >> .env.production
          echo "VITE_KEYCLOAK_CLIENT_ID=${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}" >> .env.production
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> .env.production
          echo "Environment file created:"
          cat .env.production | sed 's/=.*/=****/'  # Securely show which variables were created

      - name: Create or Update Build
        run: |
          set -e
          cd front
          if ! oc get bc vite-oc >/dev/null 2>&1; then
            oc new-build --name=vite-oc --binary --strategy=docker
          else
            echo "BuildConfig vite-oc already exists"
          fi

      - name: Start Build
        run: |
          set -e
          cd front
          oc start-build vite-oc --from-dir=. --follow