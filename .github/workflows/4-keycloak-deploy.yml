name: Deploy Keycloak on OpenShift

on:
  pull_request:
    paths:
      - 'infrastructure/keycloak/**'

jobs:
  deploy-keycloak:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install OpenShift CLI
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xvf oc.tar.gz
          sudo mv oc /usr/local/bin/

      - name: Login to OpenShift
        env:
          OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
          OPENSHIFT_PROJECT: ${{ secrets.OPENSHIFT_PROJECT }}
        run: |
          oc login $OPENSHIFT_SERVER --token=$OPENSHIFT_TOKEN --insecure-skip-tls-verify
          oc project $OPENSHIFT_PROJECT

      - name: Deploy Keycloak PostgreSQL
        run: |
          oc apply -f infrastructure/keycloak/keycloak-postgresql-deployment.yaml -n ${{ secrets.OPENSHIFT_PROJECT }}

      - name: Deploy Keycloak Server
        run: |
          oc apply -f infrastructure/keycloak/keycloak-deployment.yaml -n ${{ secrets.OPENSHIFT_PROJECT }}

      - name: Restart Keycloak if needed
        run: |
          echo "üîÅ Restarting Keycloak deployment..."
          oc rollout restart deployment/keycloak -n ${{ secrets.OPENSHIFT_PROJECT }}

      - name: Apply Realm Config (if needed)
        run: |
          oc apply -f infrastructure/keycloak/keycloak-realm-config.yaml -n ${{ secrets.OPENSHIFT_PROJECT }}

      - name: Wait for Keycloak to be Ready
        run: |
          echo "‚åõ Waiting for Keycloak pod to be ready..."
          oc wait --for=condition=Available deployment/keycloak --timeout=120s -n ${{ secrets.OPENSHIFT_PROJECT }} || echo "‚ö†Ô∏è Keycloak might not be ready yet."

      - name: Get Keycloak Route
        run: |
          ROUTE=$(oc get route keycloak -n ${{ secrets.OPENSHIFT_PROJECT }} -o jsonpath='{.spec.host}' || echo "not-found")
          echo "üîê Keycloak available at: http://$ROUTE"
